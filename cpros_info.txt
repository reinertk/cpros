           Cpros (an Ada Command Processor) 
           --------------------------------

What it is:
-----------
Cpros is a light-weight tool mainly to help developing Ada programs. Its is meant to be simple and handy for quick 
prototyping and separate/modular tests of parts of programs. More especially, it is a tool for processing commands 
which one may enter directly to a program from terminal or via files (line by line). It is made with 
inspiration from computer os "shells" (such as unix shells). Cpros may also be used permanently as a part
of a computer program for interactive control/operation or batch processing.

How it functions
----------------
Assume a program is based on cpros for terminal interaction. Cpros will then, at program start from a terminal, 
prompt the user for a command, which has the common format:

commad_name [arguments] ....

The special command, "do", is for invoking processing of commands in a file.
For example, the command:

do mac1

will start processing the commands in the file "mac1". The file "mac1" may contain
the commad "do mac2" (where "mav2" is another file with commands) and which also may
contain a "do" command etc.

The "do" command may include up tp 9 arguments like this:

do file [arg1], [arg2],...

For example, the command:

do mac1 Hello World

passes the arguments "Hello" and "World" to the command file mac1.
mac1 should in this case contain "$1" and "$2" which cpros replaces respectively by "Hello" and "World"
(this is quite similar to for example bash scripts).

The user is free to define his/her commands hard-coded in his/her source code (see the template/demo "cpros_test1.adb" below).
An exception are the commands "do" and "exit". They are obligatory. "do" is explained above. The reader may 
guess what is the intention of command "exit".



Source files
------------
cpros_test1.adb :  Simple demo which may serve as a template for a programmer using cpros.
                   Note here (in the code) that an enumeration type "c_t" represents command names to 
                   facilitate use of the Ada case statement (the user must define his/her own command names
                   preceded by "c_" except the commands "do" and "exit"):
                  
                   case command is
                      when .. =>
                      when .. =>
                   end case; 

                   This use of enumeration type for command names can ensure that no commands are left 
                   out for further treatment. It can also facilitate compact and readable code (hopefully).

cpros.ads        : (generic) package for procedure for (only) procedure cprosa which
                   if intended to call a procedure provided by the user (programmer using cpros).
                   In the template "cpros_test1.adb" it is called "cpros_actual1".
 
split_string.ads : string handling (splitting a string into "atoms" separated by space or comma ",").
                  
                  
